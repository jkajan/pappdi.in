{"version":3,"sources":["reducers/jokeReducer.js","reducers/pappReducer.js","components/Joke.js","services/joke.js","components/JokeForm.js","components/Papp.js","services/papp.js","components/PappContainer.js","hooks/index.js","App.js","index.js"],"names":["initialState","jokeReducer","state","action","type","concat","data","pappReducer","newState","i","length","id","votes","Joke","joke","className","content","author","getAll","a","axios","get","res","create","newObject","post","JokeForm","store","inputContent","inputAuthor","handleSumbit","event","preventDefault","jokeService","target","value","console","log","dispatch","reset","onSubmit","name","rows","columns","onChange","Papp","papp","show","click","handleVote","onClick","src","p","alt","style","vote","put","then","response","PappContainer","useState","voted","setVoted","display","pappService","getState","map","key","useField","setValue","App","props","setJoke","useEffect","jokes","papps","markovChain","jokestr","j","textArr","split","word","toLowerCase","replace","push","words","Object","keys","Math","floor","random","result","hasOwnProperty","rand","reducer","combineReducers","createStore","render","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.97be2900.chunk.js","sourcesContent":["const initialState = []\n\nconst jokeReducer = (state = initialState, action) => {\n  //console.log(action)\n  switch(action.type) {\n    case 'JOKE_ADD':\n      return state.concat(action.data)\n    default:\n  }\n  return state\n}\n\nexport default jokeReducer\n","const initialState = []\n\nconst pappReducer = (state = initialState, action) => {\n  //console.log(action)\n  let newState = state\n  switch(action.type) {\n    case 'PAPP_ADD':\n      return state.concat(action.data)\n    case 'PAPP_VOTE':\n      for (let i = 0;i<newState.length;i++) {\n        if (newState[i].id === action.data) {\n          newState[i].votes += 1\n          return newState\n        }\n      }\n      return state\n    default:\n  }\n  return state\n}\n\nexport default pappReducer\n","import React from 'react'\n\n//the joke component\nconst Joke = ({joke}) => {\n  if (joke) {\n    return(\n      <div className=\"jokeContent\">{joke.content}<br></br>Submitted by: {joke.author}</div>\n    )\n  } else {\n    return(<div></div>)\n  }\n}\n\nexport default Joke\n","import axios from 'axios'\nconst baseUrl = '/api/jokes'\n\nconst getAll = async() => {\n  const res = await axios.get(baseUrl)\n  return res.data\n}\n\nconst create = async(newObject) => {\n  const res = await axios.post(baseUrl, newObject)\n  return res.data\n}\n\nexport default { getAll, create }\n","//implement the form to submit jokes here\nimport React from 'react'\nimport jokeService from '../services/joke'\n\nconst JokeForm = ({store, inputContent, inputAuthor}) => {\n\n  const handleSumbit = async(event) => {\n    try{\n      event.preventDefault()\n      const joke = await jokeService.create({\n        content: event.target[0].value,\n        author: event.target[1].value\n      })\n      console.log(joke)\n      store.dispatch({\n        type: 'JOKE_ADD',\n        data: joke\n      })\n      inputContent.reset()\n      inputAuthor.reset()\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  return(\n    <div className=\"jokeForm\">\n      <p className=\"marginLeft\">Skicka in en favorit!</p>\n      <form onSubmit={handleSumbit}>\n        <textarea name=\"input\" rows=\"10\" columns=\"50\" onChange={inputContent.onChange} value={inputContent.value}>\n        </textarea>\n        <br></br>\n        <label className=\"marginLeft\">Vem i frick e du?!</label><br></br>\n        <input className=\"author\" value={inputAuthor.value} onChange={inputAuthor.onChange}></input>\n        <br></br>\n        <button className=\"marginLeft\" type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default JokeForm\n","import React from 'react'\n\nconst Papp = ({papp, show, click, handleVote}) => {\n  return (\n    <div>\n    <div className={click.click} onClick={() => handleVote(papp)}>\n      <img src={papp.p} alt=\"Din far borde synas här!\"></img>\n    </div>\n    <div style={show}>votes: {papp.votes}</div>\n    </div>\n  )\n}\n\nexport default Papp\n","import axios from 'axios'\nconst baseUrl = '/api/papps'\n\nconst getAll = async() => {\n  const res = await axios.get(baseUrl)\n  return res.data\n}\n\nconst vote = (id) => {\n  const request = axios.put(`${ baseUrl }/${id}`, \"VOTE\")\n  return request.then(response => response.data)\n}\n\nexport default { getAll, vote }\n","import React, { useState } from 'react'\nimport Papp from './Papp'\nimport pappService from '../services/papp'\n\n//the container for all Papps\nconst PappContainer = ({store}) => {\n  const [voted, setVoted] = useState(false)\n  const click = { click: voted ? 'item noclick' : ' item click' }\n  const show = { display: voted ? '' : 'none' }\n  const handleVote = async(papp) => {\n    try {\n      await pappService.vote(papp.id)\n      store.dispatch({\n        type:'PAPP_VOTE',\n        data: papp.id\n      })\n      setVoted(true)\n    } catch(exception) {\n      console.log('vote failed.')\n    }\n  }\n\n  return (\n    <div>\n      <header className=\"header\">Rösta på din favoritpapp!</header>\n      <div className=\"wrapper\">\n        {store.getState().papp.map(p => <Papp\n          key={p.id} papp={p} show={show} click={click} handleVote={handleVote} />)}\n      </div>\n    </div>\n  )\n}\n\nexport default PappContainer\n","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n  return {\n    type,\n    value,\n    onChange,\n    reset\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport Joke from './components/Joke'\nimport JokeForm from './components/JokeForm'\nimport PappContainer from './components/PappContainer'\nimport { useField } from './hooks'\nimport jokeService from './services/joke'\nimport pappService from './services/papp'\nimport './App.css'\n\nconst App = (props) => {\n  const [joke,setJoke] = useState([])\n  const inputContent = useField('text')\n  const inputAuthor = useField('text')\n  //useEffect that fetches jokes from the backend\n  useEffect(() => {\n    const get = async() => {\n      const jokes = await jokeService.getAll()\n      const papps = await pappService.getAll()\n      props.store.dispatch({\n        type: 'JOKE_ADD',\n        data: jokes\n      })\n      props.store.dispatch({\n        type: 'PAPP_ADD',\n        data: papps\n      })\n    }\n   get()\n },[props.store])\n  //the function to fetch a random joke\n  const handlePapp = () => {\n    const jokes = props.store.getState().joke\n    let rand = Math.floor(Math.random()*(jokes.length))\n    while (joke[1] && joke[1]===rand ) {\n      rand = Math.floor(Math.random()*(jokes.length))\n    }\n    setJoke([jokes[rand],rand])\n  }\n  //the function to generate a joke\n  const markovMe = () => {\n    const markovChain = {}\n    const jokes = props.store.getState().joke\n    let jokestr = \"\"\n    for (let j = 0; j <jokes.length; j++) {\n      jokestr += jokes[j].content\n    }\n    const textArr = jokestr.split(' ')\n    for (let i = 0; i < textArr.length; i++) {\n      let word = textArr[i].toLowerCase().replace(/[\\W_]/, \"\")\n      if (!markovChain[word]) {\n        markovChain[word] = []\n        }\n      if (textArr[i + 1]) {\n        markovChain[word].push(textArr[i + 1].toLowerCase().replace(/[\\W_]/, \"\"));\n      }\n    }\n    const words = Object.keys(markovChain)\n    let word = words[Math.floor(Math.random() * words.length)]\n    let result = ''\n    let newWord = ''\n    for (let i = 0; i < 100; i++ ) {\n      result += word + ' '\n      newWord =  markovChain[word][Math.floor(Math.random() * markovChain[word].length)]\n      word = newWord\n      if (!word || !markovChain.hasOwnProperty(word)) word = words[Math.floor(Math.random() * words.length)]\n    }\n    setJoke([{content: result,author: \"Markov\"},words.length])\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">Hello Papps! Välkommen till pappdi.in!</div>\n      <div className=\"buttonContainer\">\n        <button onClick={markovMe}>Generera ett 'Papp' skämt!</button>\n        <button onClick={handlePapp}>Random favorit i repris</button>\n      </div>\n      <Joke joke={joke[0]} />\n      <JokeForm store={props.store} inputContent={inputContent} inputAuthor={inputAuthor} />\n      <br></br>\n      <PappContainer store={props.store} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport jokeReducer from './reducers/jokeReducer'\nimport pappReducer from './reducers/pappReducer'\nimport App from './App'\n\nconst reducer = combineReducers({\n  joke: jokeReducer,\n  papp: pappReducer\n})\n\nconst store = createStore(reducer)\n\nconst render = () => {\n  ReactDOM.render(\n    <App store={store} />,\n    document.getElementById('root')\n  )\n}\n\nrender()\nstore.subscribe(render)\n"],"sourceRoot":""}